df %>%
pivot_longer(
cols = starts_with("Veículos Envolvidos"),
names_to = "test"
)  %>%
View()
df %>% View()
df %>%
pivot_longer(cols = starts_with("Veículos Envolvidos"))  %>%
View()
df %>%
pivot_longer(cols = starts_with("Veículos Envolvidos"))
df %>%
pivot_longer(cols = starts_with("Veículos Envolvidos")) %>% View()
df %>%
pivot_longer(cols = starts_with("Veículos Envolvidos")) %>%
ggplot(aes(x = name)) %>%
geom_histogram()
df %>%
pivot_longer(cols = starts_with("Veículos Envolvidos")) %>%
ggplot(aes(x = name)) +
geom_histogram()
df %>%
pivot_longer(cols = starts_with("Veículos Envolvidos")) %>%
ggplot(aes(x = name)) +
geom_histogram(stat = "count")
df %>%
pivot_longer(cols = starts_with("Veículos Envolvidos")) %>%
ggplot(aes(x = name)) +
geom_histogram(stat = "sum")
df %>%
colnames()
df %>%
select(
"Bicicleta": "Veículos Envolvidos - Bicicleta"
)
df %>%
select(
"Bicicleta" = "Veículos Envolvidos - Bicicleta"
)
df %>%
colnames()
df %>%
select(
"bicicleta" = "Veículos Envolvidos - Bicicleta",
"caminhao" = "Veículos Envolvidos - Caminhão",
"automovel" = "Veículos Envolvidos - Automóvel",
"motocicleta" = "Veículos Envolvidos - Ônibus",
"onibus" = "Veículos Envolvidos - Bicicleta",
"pedestre" = "Veículos Envolvidos - Pedestre",
)
df %>%
select(
"bicicleta" = "Veículos Envolvidos - Bicicleta",
"caminhao" = "Veículos Envolvidos - Caminhão",
"automovel" = "Veículos Envolvidos - Automóvel",
"motocicleta" = "Veículos Envolvidos - Ônibus",
"onibus" = "Veículos Envolvidos - Bicicleta",
"pedestre" = "Veículos Envolvidos - Pedestre",
) %>%
summarize(
bicicletas = sum(bicicletas)
)
df %>%
select(
"bicicleta" = "Veículos Envolvidos - Bicicleta",
"caminhao" = "Veículos Envolvidos - Caminhão",
"automovel" = "Veículos Envolvidos - Automóvel",
"motocicleta" = "Veículos Envolvidos - Ônibus",
"onibus" = "Veículos Envolvidos - Bicicleta",
"pedestre" = "Veículos Envolvidos - Pedestre",
) %>%
summarize(
bicicletas = sum(bicicleta)
)
setwd("C:/git/PEE")
library(tidyverse)
library(readr)
library(readr)
df <- read_csv("output/data-2022.csv")
View(df)
vcovCL(df,cluster=turno)
library(sandwich)
sandwich::vcovCL(df,cluster=turno)
df %>% class()
df %>% tibble()
df %>% tibble() %>% class()
df %>% tibble() %>%
sandwich::vcovCL(cluster=turno)
?drop_na
df %>% tibble() %>%
drop_na()
df %>% tibble() %>%
drop_na() %>%
sandwich::vcovCL(cluster=turno)
?vcovCL
data("PetersenCL", package = "sandwich")
m <- lm(y ~ x, data = PetersenCL)
m %>% summary()
## clustered covariances
## one-way
vcovCL(m, cluster = ~ firm)
View(df)
library(tidyverse)
library(readr)
df_original <- data.table::fread("dados/ignore/perfil_comparecimento_abstencao_2018.csv", sep = ";",
encoding = "Latin-1", showProgress = TRUE)
df <- df_original %>%
select(ano = ANO_ELEICAO, turno = NR_TURNO, municipio = CD_MUNICIPIO,
faixa_etaria = DS_FAIXA_ETARIA, aptos = QT_APTOS, abstencoes = QT_ABSTENCAO) %>%
mutate(
faixa_etaria = fct_collapse(
faixa_etaria,
"18 a 20 anos" = c("20 anos", "19 anos", "18 anos"),
"16 e 17 anos" = c("17 anos", "16 anos")),
faixa_etaria = fct_relevel(faixa_etaria, "100 anos ou mais", after = Inf)) %>%
group_by(ano, turno, municipio, faixa_etaria) %>%
summarize(aptos = sum(aptos),
abstencoes = sum(abstencoes))
View(df)
municipios_tse <- read_csv("dados/municipios_brasileiros_tse.csv")
View(municipios_tse)
View(df)
municipios_tse <- read_csv("dados/municipios_brasileiros_tse.csv") %>%
select(id_municipio_tse = codigo_tse, id_municipio = codigo_ibge)
df <- df_original %>%
select(ano = ANO_ELEICAO, turno = NR_TURNO, id_municipio_tse = CD_MUNICIPIO,
faixa_etaria = DS_FAIXA_ETARIA, aptos = QT_APTOS, abstencoes = QT_ABSTENCAO) %>%
mutate(
faixa_etaria = fct_collapse(
faixa_etaria,
"18 a 20 anos" = c("20 anos", "19 anos", "18 anos"),
"16 e 17 anos" = c("17 anos", "16 anos")),
faixa_etaria = fct_relevel(faixa_etaria, "100 anos ou mais", after = Inf)) %>%
group_by(ano, turno, municipio, faixa_etaria) %>%
summarize(aptos = sum(aptos),
abstencoes = sum(abstencoes)) %>%
left_join(municipios_tse)
df <- df_original %>%
select(ano = ANO_ELEICAO, turno = NR_TURNO, id_municipio_tse = CD_MUNICIPIO,
faixa_etaria = DS_FAIXA_ETARIA, aptos = QT_APTOS, abstencoes = QT_ABSTENCAO) %>%
mutate(
faixa_etaria = fct_collapse(
faixa_etaria,
"18 a 20 anos" = c("20 anos", "19 anos", "18 anos"),
"16 e 17 anos" = c("17 anos", "16 anos")),
faixa_etaria = fct_relevel(faixa_etaria, "100 anos ou mais", after = Inf)) %>%
group_by(ano, turno, id_municipio_tse, faixa_etaria) %>%
summarize(aptos = sum(aptos),
abstencoes = sum(abstencoes)) %>%
left_join(municipios_tse)
View(df)
passe_livre <- read_csv("dados/passe_livre.csv")
View(passe_livre)
df <- df_original %>%
select(ano = ANO_ELEICAO, turno = NR_TURNO, id_municipio_tse = CD_MUNICIPIO,
faixa_etaria = DS_FAIXA_ETARIA, aptos = QT_APTOS, abstencoes = QT_ABSTENCAO) %>%
mutate(
faixa_etaria = fct_collapse(
faixa_etaria,
"18 a 20 anos" = c("20 anos", "19 anos", "18 anos"),
"16 e 17 anos" = c("17 anos", "16 anos")),
faixa_etaria = fct_relevel(faixa_etaria, "100 anos ou mais", after = Inf)) %>%
group_by(ano, turno, id_municipio_tse, faixa_etaria) %>%
summarize(aptos = sum(aptos),
abstencoes = sum(abstencoes)) %>%
left_join(municipios_tse) %>%
left_join(passe_livre)
View(passe_livre)
View(df)
df_original <- data.table::fread("dados/ignore/perfil_comparecimento_abstencao_2022.csv", sep = ";",
encoding = "Latin-1", showProgress = TRUE)
municipios_tse <- read_csv("dados/municipios_brasileiros_tse.csv") %>%
select(id_municipio_tse = codigo_tse, id_municipio = codigo_ibge)
passe_livre <- read_csv("dados/passe_livre.csv")
df <- df_original %>%
select(ano = ANO_ELEICAO, turno = NR_TURNO, id_municipio_tse = CD_MUNICIPIO,
faixa_etaria = DS_FAIXA_ETARIA, aptos = QT_APTOS, abstencoes = QT_ABSTENCAO) %>%
mutate(
faixa_etaria = fct_collapse(
faixa_etaria,
"18 a 20 anos" = c("20 anos", "19 anos", "18 anos"),
"16 e 17 anos" = c("17 anos", "16 anos")),
faixa_etaria = fct_relevel(faixa_etaria, "100 anos ou mais", after = Inf)) %>%
group_by(ano, turno, id_municipio_tse, faixa_etaria) %>%
summarize(aptos = sum(aptos),
abstencoes = sum(abstencoes)) %>%
left_join(municipios_tse) %>%
left_join(passe_livre)
View(df)
#Análise descritiva
df %>%
filter(faixa_etaria != "Inválido") %>%
group_by(turno, faixa_etaria) %>%
summarize(aptos = sum(aptos), abstencoes = sum(abstencoes)) %>%
mutate(comparecimento = 1- abstencoes/aptos,
comparecimento = ifelse(turno == 1, -comparecimento, comparecimento)) %>%
ggplot(aes(x = faixa_etaria, y = comparecimento, fill = factor(turno))) +
geom_col() +
# geom_hline(yintercept = -0.8371519, linetype = "dashed") +
# geom_hline(yintercept = 0.8470657, linetype = "dashed") +
coord_flip() +
labs(x = "", y = "Comparecimento", fill = "Turno")
View(df)
library(readr)
psm <- read_csv("dados/psm.csv")
View(psm)
psm <- read_csv("dados/psm.csv") %>%
left_join(passe_livre)
View(psm)
modelo.psm <- passe_livre ~ razao_dependencia + taxa_envelhecimento + expectativa_anos_estudo +
taxa_analfabetismo_18_mais + indice_gini + prop_pobreza_extrema + log(renda_pc) + idhm +
taxa_desocupacao_18_mais  + taxa_agua_encanada + log(populacao) + populacao_urbana
glm(modelo.psm, data = psm) %>% summary()
glm(modelo.psm, data = psm %>% filter(turno == 2)) %>% summary()
df.psm <- read_csv("dados/psm.csv") %>%
left_join(passe_livre)
psm <- glm(modelo.psm, data = df.psm %>% filter(turno == 2)) %>% summary()
pscore <- predict(probit,type="response")
pscore <- predict(psm, type="response")
psm <- glm(modelo.psm, data = df.psm %>% filter(turno == 2))
pscore <- predict(psm, type="response")
ggplot(dataset6,mapping=aes(x=pscore))+geom_density()+
facet_wrap(~enrolled)+
xlab("Probabilityofbeingenrolled")
ggplot(df.psm %>% filter(turno == 2), mapping=aes(x=pscore))+geom_density()+
facet_wrap(~enrolled)+
xlab("Probabilityofbeingenrolled")
ggplot(df.psm %>% filter(turno == 2), mapping=aes(x=pscore))+geom_density()+
facet_wrap(~passe_livre)+
xlab("Probabilityofbeingenrolled")
#Balanceamento antes do PSM
df.psm %>%
mutate(ps = predict(glm(modelo.psm, data = ., family = binomial(link = "logit")), type = "response"),
turno = ifelse(turno == 1, "Primeiro Turno", "Segundo Turno")) %>%
ggplot() +
geom_density(aes(ps, fill = tratamento), alpha = .7) +
facet_wrap("turno") +
labs(x = "Propensity Score", y = "Densidade") +
scale_fill_manual(values = c("FALSE" = "#5C5B60",
"TRUE"="#D28673")) +
scale_x_continuous(labels = scales::percent_format(scale = 100),
limits = c(0,0.8))
#Balanceamento antes do PSM
df.psm %>%
mutate(ps = predict(glm(modelo.psm, data = ., family = binomial(link = "logit")), type = "response"),
turno = ifelse(turno == 1, "Primeiro Turno", "Segundo Turno")) %>%
ggplot() +
geom_density(aes(ps, fill = passe_livre), alpha = .7) +
facet_wrap("turno") +
labs(x = "Propensity Score", y = "Densidade") +
scale_fill_manual(values = c("FALSE" = "#5C5B60",
"TRUE"="#D28673")) +
scale_x_continuous(labels = scales::percent_format(scale = 100),
limits = c(0,0.8))
#Balanceamento antes do PSM
df.psm %>%
filter(turno == 2) %>%
mutate(ps = predict(glm(modelo.psm, data = ., family = binomial(link = "logit")), type = "response")) %>%
ggplot() +
geom_density(aes(ps, fill = passe_livre), alpha = .7) +
labs(x = "Propensity Score", y = "Densidade") +
scale_fill_manual(values = c("FALSE" = "#5C5B60",
"TRUE"="#D28673")) +
scale_x_continuous(labels = scales::percent_format(scale = 100),
limits = c(0,0.8))
df.psm %>%
filter(turno == 2) %>%
mutate(ps = predict(glm(modelo.psm, data = ., family = binomial(link = "logit")), type = "response"))
#Balanceamento antes do PSM
df.psm %>%
filter(turno == 2) %>%
mutate(ps = predict(glm(modelo.psm, data = ., family = binomial(link = "logit")), type = "response")) %>% View()
ggplot() +
geom_density(aes(ps, fill = factor(passe_livre)), alpha = .7) +
labs(x = "Propensity Score", y = "Densidade") +
scale_fill_manual(values = c("FALSE" = "#5C5B60",
"TRUE"="#D28673")) +
scale_x_continuous(labels = scales::percent_format(scale = 100),
limits = c(0,0.8))
#Balanceamento antes do PSM
df.psm %>%
filter(turno == 2) %>%
mutate(ps = predict(glm(modelo.psm, data = ., family = binomial(link = "logit")), type = "response")) %>%
ggplot() +
geom_density(aes(ps, fill = factor(passe_livre)), alpha = .7) +
labs(x = "Propensity Score", y = "Densidade") +
scale_fill_manual(values = c("FALSE" = "#5C5B60",
"TRUE"="#D28673")) +
scale_x_continuous(labels = scales::percent_format(scale = 100),
limits = c(0,0.8))
#Balanceamento antes do PSM
df.psm %>%
filter(turno == 2) %>%
mutate(ps = predict(glm(modelo.psm, data = ., family = binomial(link = "logit")), type = "response")) %>%
ggplot() +
geom_density(aes(ps, fill = factor(passe_livre)), alpha = .7) +
labs(x = "Propensity Score", y = "Densidade") +
scale_fill_manual(values = c("FALSE" = "#5C5B60",
"TRUE"="#D28673")) +
scale_x_continuous(labels = scales::percent_format(scale = 100),
limits = c(0,1))
#Balanceamento antes do PSM
df.psm %>%
filter(turno == 2) %>%
mutate(ps = predict(glm(modelo.psm, data = ., family = binomial(link = "logit")), type = "response")) %>%
ggplot() +
geom_density(aes(ps, fill = factor(passe_livre)), alpha = 1) +
labs(x = "Propensity Score", y = "Densidade") +
scale_fill_manual(values = c("FALSE" = "#5C5B60",
"TRUE"="#D28673")) +
scale_x_continuous(labels = scales::percent_format(scale = 100),
limits = c(0,1))
#Balanceamento antes do PSM
df.psm %>%
filter(turno == 2) %>%
mutate(ps = predict(glm(modelo.psm, data = ., family = binomial(link = "logit")), type = "response")) %>%
ggplot() +
geom_density(aes(ps, fill = factor(passe_livre)), alpha = 1) +
labs(x = "Propensity Score", y = "Densidade") +
scale_x_continuous(labels = scales::percent_format(scale = 100),
limits = c(0,1))
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 2))
library(MatchIt)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 2))
View(df.match)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(-aptos, -abstencoes) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao) %>%
mutate(across(everything(), ~ . - `65 a 69 anos`))
View(df.match)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao) %>%
mutate(across(everything(), ~ . - `65 a 69 anos`))
df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao)
View(df.reg)
View(df.reg)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos)
View(df.reg)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao)
View(df.match)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao)
df.match
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao, turno) %>%
filter(turno == 2) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao, turno) %>%
filter(turno == 2)
matchit(modelo.psm, data=df.psm, link="probit", replace = T)
matchit(modelo.psm, data=df.psm %>% filter(turno == 2), link="probit", replace = T)
df.psm <- read_csv("dados/psm.csv") %>%
left_join(passe_livre) %>%
filter(turno == 2)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 2))
matchit(modelo.psm, data=df.psm, link="probit", replace = T)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 2))
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio)
View(df.match)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm)
View(df.match)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 2))
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 2))
df %>% filter(turno == 2)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 2))
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio)
768*19
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
select(id_municipio) %>%
left_join(df %>% filter(turno == 2))
768*20
768*18
768*19
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao) %>%
mutate(across(everything(), ~ . - `65 a 69 anos`))
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao)
View(df.reg)
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos)
View(df.reg)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm)
View(df.match)
View(df.match)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
mutate(id_municipio_unico = paste(id_municipio, subclass, sep = "-"))
View(df.match)
df.match <- matchit(modelo.psm, data=df.psm, link="probit", replace = T) %>%
get_matches(distance = "propscore", data=df.psm) %>%
mutate(id_municipio_unico = paste(id_municipio, subclass, sep = "-")) %>%
select(id_municipio, id_municipio_unico) %>%
left_join(df %>% filter(turno == 2))
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio_unico, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao) %>%
mutate(across(everything(), ~ . - `65 a 69 anos`))
df.reg <- df.match %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio_unico, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao)
View(df.reg)
df.reg <- df.match %>%
filter(faixa_etaria != "Inválido", faixa_etaria != "100 anos ou mais")
df.reg <- df.match %>%
filter(faixa_etaria != "Inválido", faixa_etaria != "100 anos ou mais") %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio_unico, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao)
View(df.reg)
df.reg <- df.match %>%
filter(faixa_etaria != "Inválido", faixa_etaria != "100 anos ou mais") %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio_unico, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao) %>%
mutate(across(everything(), ~ . - `65 a 69 anos`))
df.reg <- df.match %>%
filter(faixa_etaria != "Inválido", faixa_etaria != "100 anos ou mais") %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio_unico, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao) %>%
mutate(across(!id_municipio_unico, ~ . - `65 a 69 anos`))
lm(`60 a 64 anos` ~ passe_livre + factor(uf), data = df.reg) %>%
summary(.)
lm(`60 a 64 anos` ~ passe_livre, data = df.reg) %>%
summary(.)
View(df.match)
df.reg <- df.match %>%
filter(faixa_etaria != "Inválido", faixa_etaria != "100 anos ou mais") %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio_unico, passe_livre, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao) %>%
mutate(across(!id_municipio_unico, ~ . - `65 a 69 anos`))
df.reg <- df.match %>%
filter(faixa_etaria != "Inválido", faixa_etaria != "100 anos ou mais") %>%
mutate(tx_abstencao = abstencoes / aptos) %>%
select(id_municipio_unico, passe_livre, faixa_etaria, tx_abstencao) %>%
pivot_wider(names_from = faixa_etaria, values_from = tx_abstencao) %>%
mutate(across(!c(id_municipio_unico, passe_livre), ~ . - `65 a 69 anos`))
lm(`60 a 64 anos` ~ passe_livre, data = df.reg) %>%
summary(.)
lm(`55 a 59 anos` ~ passe_livre, data = df.reg) %>%
summary(.)
